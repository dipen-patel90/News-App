plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // Safe Args
    id 'androidx.navigation.safeargs.kotlin'

    // Hilt
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'

    // Parcelize
    id 'kotlin-parcelize'
}

def getLocalProperties(String key) {
    Properties properties = new Properties()
    File file = project.rootProject.file('local.properties')
    if (file.exists()) {
        properties.load(file.newDataInputStream())
        return properties.getProperty(key)
    } else {
        return ""
    }
}

def getSystemOrLocalProperty(String propertyKey, String defaultLocalPropertyKey = "") {
    return System.getenv(propertyKey) ?: getLocalProperties(defaultLocalPropertyKey == "" ? propertyKey : defaultLocalPropertyKey)
}

android {
    namespace 'com.ct'
    compileSdk 33

    defaultConfig {
        applicationId "com.ct"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

//        buildTypes.each {
//            it.buildConfigField 'String', 'NEWS_API_KEY', getSystemOrLocalProperty("NEWS_API_KEY")
//        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        dataBinding true
    }

    flavorDimensions "default"
    productFlavors{
        bbc{
            applicationIdSuffix ".bbc"
            buildConfigField "String", 'NEWS_API_KEY', getSystemOrLocalProperty("BBC_API_KEY")
        }

        cnn{
            applicationIdSuffix ".cnn"
            buildConfigField "String", 'NEWS_API_KEY', getSystemOrLocalProperty("CNN_API_KEY")
        }
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Nav Graph
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    //GSON
    implementation "com.google.code.gson:gson:$gson_version"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //Glide - Image loading library
    implementation "com.github.bumptech.glide:glide:$glide"

    // Biometric
    implementation "androidx.biometric:biometric:$biometric_version"
}

kapt {
    correctErrorTypes true
}